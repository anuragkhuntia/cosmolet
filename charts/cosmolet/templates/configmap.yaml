{{- if .Values.configMap.create }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "cosmolet.fullname" . }}-config
  namespace: {{ .Values.namespace.name }}
  labels:
    {{- include "cosmolet.labels" . | nindent 4 }}
    component: bgp-controller
    {{- with .Values.commonLabels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
data:
  config.yaml: |
    # BGP Configuration
    bgp:
      asn: {{ .Values.bgp.asn }}
      {{- if .Values.bgp.routerId }}
      router_id: {{ .Values.bgp.routerId | quote }}
      {{- else }}
      router_id: ""
      {{- end }}
      neighbors:
        {{- range .Values.bgp.neighbors }}
        - {{ . | quote }}
        {{- end }}
      {{- if .Values.bgp.networks }}
      networks:
        {{- range .Values.bgp.networks }}
        - {{ . | quote }}
        {{- end }}
      {{- end }}
      enable_bfd: {{ .Values.bgp.enableBfd }}
      {{- if .Values.bgp.vtyPassword }}
      vty_password: {{ .Values.bgp.vtyPassword | quote }}
      {{- end }}

    # Service Advertisement Configuration
    service_advertisement:
      enabled: {{ .Values.serviceAdvertisement.enabled }}
      default_action: {{ .Values.serviceAdvertisement.defaultAction | quote }}
      {{- if .Values.serviceAdvertisement.rules }}
      rules:
        {{- range .Values.serviceAdvertisement.rules }}
        - name: {{ .name | quote }}
          {{- if .description }}
          description: {{ .description | quote }}
          {{- end }}
          action: {{ .action | quote }}
          {{- if .priority }}
          priority: {{ .priority }}
          {{- end }}
          service_selector:
            {{- if .serviceSelector.types }}
            types:
              {{- range .serviceSelector.types }}
              - {{ . | quote }}
              {{- end }}
            {{- end }}
            {{- if .serviceSelector.namespaces }}
            namespaces:
              {{- range .serviceSelector.namespaces }}
              - {{ . | quote }}
              {{- end }}
            {{- end }}
            {{- if .serviceSelector.labels }}
            labels:
              {{- range $key, $value := .serviceSelector.labels }}
              {{ $key | quote }}: {{ $value | quote }}
              {{- end }}
            {{- end }}
            {{- if .serviceSelector.annotations }}
            annotations:
              {{- range $key, $value := .serviceSelector.annotations }}
              {{ $key | quote }}: {{ $value | quote }}
              {{- end }}
            {{- end }}
          {{- if .bgpAttributes }}
          bgp_attributes:
            {{- if .bgpAttributes.localPreference }}
            local_preference: {{ .bgpAttributes.localPreference }}
            {{- end }}
            {{- if .bgpAttributes.communities }}
            communities:
              {{- range .bgpAttributes.communities }}
              - {{ . | quote }}
              {{- end }}
            {{- end }}
            {{- if .bgpAttributes.med }}
            med: {{ .bgpAttributes.med }}
            {{- end }}
            {{- if .bgpAttributes.asPathPrepend }}
            as_path_prepend: {{ .bgpAttributes.asPathPrepend }}
            {{- end }}
          {{- end }}
        {{- end }}
      {{- end }}

    # Health Check Configuration
    health_check:
      enabled: true
      check_interval: {{ .Values.health.checkInterval | quote }}
      criteria:
        min_ready_endpoints: {{ .Values.health.criteria.minReadyEndpoints }}
        min_ready_percentage: {{ .Values.health.criteria.minReadyPercentage }}
        unhealthy_grace_period: {{ .Values.health.criteria.unhealthyGracePeriod | quote }}
        healthy_grace_period: {{ .Values.health.criteria.healthyGracePeriod | quote }}

    # Controller Configuration
    controller:
      workers: {{ .Values.controller.workers }}
      queue_size: {{ .Values.controller.queueSize }}
      resync_period: {{ .Values.controller.resyncPeriod | quote }}
      leader_election:
        enabled: {{ .Values.controller.leaderElection }}

    # Logging Configuration
    logging:
      level: {{ .Values.logging.level | quote }}
      format: {{ .Values.logging.format | quote }}

    # Metrics Configuration
    metrics:
      enabled: {{ .Values.metrics.enabled }}
      listen_address: ":{{ .Values.metrics.port }}"
      path: {{ .Values.metrics.path | quote }}
{{- end }}

---
{{- if .Values.frrConfigMap.create }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "cosmolet.fullname" . }}-frr-config
  namespace: {{ .Values.namespace.name }}
  labels:
    {{- include "cosmolet.labels" . | nindent 4 }}
    component: frr
    {{- with .Values.commonLabels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
data:
  frr.conf: |
{{ .Values.frrConfigMap.config | indent 4 }}
  daemons: |
{{ .Values.frrConfigMap.daemons | indent 4 }}
  vtysh.conf: |
    service integrated-vtysh-config
    username root nopassword
{{- end }}
